


Tetris G SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    1


      1                 ; ===========================================================================
      2                 		title   Tetris
      3                 		type	8521
      4 4000             		org	4000h
      5                 ; ---------------------------------------------------------------------------		
      8                 		LIST		
      9                 ; ---------------------------------------------------------------------------		
     10                 		program	
     11                 		
     12                 		global Game_FadeIn
     13                 		global Game_FadeOut
     14                 
     15                 ; ===========================================================================	
     16 4000 08         		db      08h
     17 4001 20         		db      20h
     18 4002 4020       		dw      EntryPoint
     19 4004 03         		db      00000011b           ;3
     20 4005 54696765   		dm      'TigerDMGC'
        4009 72444D47
        400D 43
     21 400E 24         		db      24h	         		;icon located bank no.
     22 400F 00         		db      0                  	;x_coord.
     23 4010 A0         		db      160                 ;y_coord.
     24 4011 54657472   		dm      'TetrisTGM'			; Game Title
        4015 69735447
        4019 4D
     25 401A 1A18       		dw      1A18h				; Game ID (just something random here)
     26 401C 97         		db      97h
     27 401D 00         		db      0
     28 401E 0000       		dw      0
     29                 ; ===========================================================================	
     30 4020            EntryPoint:
     31 4020 0000       		clr     r0
     32 4022 500002     		cmp     r2,#0			; is the Game.COM turning on from a cold boot?
     33 4025 D613       		br      eq,GameInit		; if so, branch
     34 4027 500102     		cmp     r2,#1			; has the game been entered from the main menu?
     35 402A 96403B     		jmp     eq,Game_Exe		; if so, branch
     36 402D 500202     		cmp     r2,#2			; is the game being closed?
     37 4030 D608       		br      eq,GameInit		; if so, branch
     38 4032 500302     		cmp     r2,#3			; is the game being reset?
     39 4035 D603       		br      eq,GameInit		; if so, branch
     40 4037 C0FF       		mov     r0,#-1			; otherwise, indicate that none of the above conditions were able to be met
     41 4039 F8         		ret				; return
     42                 ; ---------------------------------------------------------------------------
     43 403A            GameInit:
     44 403A F8         		ret				; return, doing nothing
     45                 ; ---------------------------------------------------------------------------		
     46 403B            Game_Reset:
     47 403B            Game_Exe:
     48 403B 58FFC0     		mov		fadeStep,#255
     49 403E 5800C1     		mov 	gameState,#0
     50 4041            Game_State:
     51 4041 494063     		call    Game_FadeIn
     52 4044 494047     		call	Game_Update
     53 4047            Game_Update:



  Tetris SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    2


     54 4047 5000C1     		cmp 	gameState, #0
     55 404A 9641EC     		jmp 	eq, SFGHQ_Update
     56 404D 5001C1     		cmp 	gameState, #1
     57 4050 964249     		jmp 	eq, Tetris_Update
     58                 		
     59 4053 984047     		jmp		Game_Update
     60 4056            Game_Draw:
     61 4056 5000C1     		cmp 	gameState, #0
     62 4059 9641F6     		jmp 	eq, SFGHQ_Draw
     63 405C 5001C1     		cmp 	gameState, #1
     64 405F 96424C     		jmp 	eq, Tetris_Draw
     65 4062 F8         		ret
     66 4063            Game_FadeIn:
     67 4063 4941BA     		call	WaitForVInt	
     68 4066 B0C0       		mov		r0,fadeStep
     69 4068 0900       		dec		r0
     70 406A B8C0       		mov		fadeStep,r0
     71                 
     72 406C 494056     		call	Game_Draw	
     73                 		
     74 406F 506F00     		cmp		r0,#111
     75 4072 9E4063     		jmp		ne,Game_FadeIn
     76                 		
     77 4075 F8         		ret
     78 4076            Game_ChangeState:
     79 4076 494082     		call    Game_FadeOut
     80 4079 48C2C1     		mov		gameState,nextGState
     81 407C 494063     		call    Game_FadeIn
     82 407F 984047     		jmp		Game_Update
     83                 		
     84 4082            Game_FadeOut:
     85 4082 4941BA     		call	WaitForVInt	
     86 4085 B0C0       		mov		r0,fadeStep
     87 4087 0800       		inc		r0
     88 4089 B8C0       		mov		fadeStep,r0
     89                 		
     90 408B 494056     		call	Game_Draw	
     91                 		
     92 408E 50FF00     		cmp		r0,#255
     93 4091 9E4082     		jmp		ne,Game_FadeOut
     94 4094 F8         		ret
     95                 
     96                 ; ===========================================================================	
     97                 		include	source/SYSCALL.ASM
     97+                    title   System Call
     97+                	type	8521
     97+                		
     97+                    program
     97+                
     97+     20F1       System_Call     equ     20f1h
     97+     00A8       sp_control      equ     0a8h
     97+                
     97+                    global          FBDrawGraphic
     97+                    global          Fi_patt
     97+                    global          disable_pause,enable_pause



System C SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    3


     97+                	global			Disp_setup
     97+                    global          Dsp_ch
     97+                    global          FBFillColor
     97+                    global          Blk_rev
     97+                	global			Blk_cls
     97+                	global			FBDrawLineV
     97+                	global			FBDrawLineH
     97+                    global          clear_A
     97+                    global          Select_mode
     97+                    global          FBFillColorRect
     97+                	global			IOInputScan
     97+                	global			CTRL_KBD
     97+                	global			SET_TMR
     97+                	global			CTRL_TMR
     97+                
     97+                    global          Switch_bank
     97+                    global          MemoryBlkReq
     97+                	global			Check_Timer
     97+                	global			Delay_Timer
     97+                
     97+                    global  		Active_page_B
     97+                    global  		Active_page_A
     97+                	global			FBDrawGraphic2
     97+                	global			Swap_page
     97+                	
     97+                	global			SysKeyHandler
     97+                	global			quit_box
     97+                    global  		Return_line
     97+                	global			enable_timeout
     97+                	global			disable_timeout
     97+                	global			restart_timeout
     97+                
     97+4095            Output_scan:
     97+4095 1E06       	pushw	rr6
     97+4097 C77A       	mov		r7,#7ah
     97+4099 9820F1     	jmp		System_Call
     97+                
     97+409C            Return_line:
     97+409C 1E06       	pushw	rr6
     97+409E C77B       	mov		r7,#7bh
     97+40A0 9820F1     	jmp		System_Call
     97+                
     97+40A3            FBFillColorRect:
     97+40A3 1E06       	pushw   rr6
     97+40A5 C72E       	mov     r7,#2eh
     97+40A7 9820F1     	jmp		System_Call
     97+40AA            Disp_setup:
     97+40AA 1E06       	pushw	rr6
     97+40AC C700       	mov		r7,#0
     97+40AE 9820F1     	jmp		System_Call
     97+40B1            Dsp_ch:
     97+40B1 1E06           pushw   rr6
     97+40B3 C701           mov     r7,#1
     97+40B5 9820F1         jmp		System_Call
     97+40B8            FBFillColor:



System C SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    4


     97+40B8 1E06       	pushw	rr6
     97+40BA C71B       	mov		r7,#1bh
     97+40BC 9820F1     	jmp		System_Call
     97+                
     97+40BF            Fi_patt:
     97+40BF 1E06           pushw   rr6
     97+40C1 C71C           mov     r7,#1ch
     97+40C3 9820F1         jmp		System_Call
     97+                
     97+40C6            FBDrawGraphic:
     97+40C6 1E06       	pushw   rr6
     97+40C8 C71D       	mov     r7,#1dh
     97+40CA 9820F1     	jmp		System_Call
     97+                
     97+40CD            set_line_color:
     97+40CD 1E06       	pushw	rr6
     97+40CF C721       	mov		r7,#21h
     97+40D1 9820F1     	jmp		System_Call
     97+40D4            Blk_rev:
     97+40D4 1E06           pushw   rr6
     97+40D6 C722           mov     r7,#22h
     97+40D8 9820F1         jmp		System_Call
     97+40DB            Blk_cls:
     97+40DB 1E06       	pushw	rr6
     97+40DD C723       	mov		r7,#23h
     97+                
     97+40DF            FBDrawLineV:
     97+40DF 1E06       	pushw	rr6
     97+40E1 C726       	mov		r7,#26h
     97+40E3 9820F1     	jmp		System_Call
     97+40E6            FBDrawLineH:
     97+40E6 1E06       	pushw	rr6
     97+40E8 C727       	mov		r7,#27h
     97+40EA 9820F1     	jmp		System_Call
     97+40ED            clear_A:
     97+40ED 1E06           pushw   rr6
     97+40EF C728           mov     r7,#28h
     97+40F1 9820F1         jmp		System_Call
     97+                
     97+40F4            Select_mode:
     97+40F4 1E06       	pushw   rr6
     97+40F6 C72C       	mov     r7,#2ch
     97+40F8 9820F1     	jmp		System_Call
     97+                
     97+40FB            IOInputScan:
     97+40FB 1E06       	pushw	rr6
     97+40FD C72F       	mov		r7,#2fh
     97+40FF 9820F1     	jmp		System_Call
     97+4102            CTRL_KBD:
     97+4102 1E06       	pushw	rr6
     97+4104 C730       	mov		r7,#30h
     97+4106 9820F1     	jmp		System_Call
     97+4109            SET_TMR:
     97+4109 1E06       	pushw	rr6
     97+410B C731       	mov		r7,#31h



System C SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    5


     97+410D 9820F1     	jmp		System_Call
     97+4110            CTRL_TMR:
     97+4110 1E06       	pushw	rr6
     97+4112 C732       	mov		r7,#32h
     97+                
     97+4114            Switch_bank:
     97+4114 1E06          pushw   rr6
     97+4116 C745          mov     r7,#45h
     97+4118 9820F1        jmp		System_Call
     97+                
     97+411B            MemoryBlkReq:
     97+411B 1E06       	pushw	rr6
     97+411D C74C       	mov		r7,#4ch
     97+411F 9820F1     	jmp		System_Call
     97+                
     97+4122            Check_Timer:
     97+4122 1E06       	pushw	rr6
     97+4124 C750       	mov		r7,#50h
     97+4126 9820F1     	jmp		System_Call
     97+4129            Delay_Timer:
     97+4129 1E06       	pushw	rr6
     97+412B C751       	mov		r7,#51h
     97+412D            Active_page_B:
     97+412D 1E06       	pushw	rr6
     97+412F C754       	mov		r7,#54h
     97+4131 9820F1     	jmp		System_Call
     97+4134            Active_page_A:
     97+4134 1E06       	pushw	rr6
     97+4136 C755       	mov		r7,#55h
     97+4138 9820F1     	jmp		System_Call
     97+413B            FBDrawGraphic2:
     97+413B 1E06       	pushw	rr6
     97+413D C756       	mov		r7,#56h
     97+413F 9820F1     	jmp		System_Call
     97+                
     97+4142            Swap_page:
     97+4142 1E06       	pushw	rr6
     97+4144 C757       	mov		r7,#57h
     97+4146 9820F1     	jmp		System_Call
     97+                
     97+4149            Blk_mov_2:
     97+4149 1E06       	pushw   rr6
     97+414B C758       	mov     r7,#58h
     97+414D 9820F1     	jmp		System_Call
     97+                
     97+4150            SysKeyHandler:
     97+4150 1E06       	pushw	rr6
     97+4152 C778       	mov		r7,#78h
     97+4154 9820F1     	jmp		System_Call	
     97+                
     97+4157            quit_box:
     97+4157 1E06       	pushw	rr6
     97+4159 C779       	mov		r7,#79h
     97+415B 9820F1     	jmp		System_Call
     97+                



System C SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    6


     97+415E            enable_timeout:
     97+                ;        pushw   rr6
     97+                ;        mov     r7,#7ch
     97+                ;        jmp		System_Call
     97+415E A5A8               bclr    sp_control,#5           ;enable time_out
     97+4160 F8                 ret
     97+                
     97+4161            disable_timeout:
     97+                ;        pushw   rr6
     97+                ;        mov     r7,#7dh
     97+                ;        jmp		System_Call
     97+4161 ADA8               bset    sp_control,#5           ;disable time_out
     97+4163 F8                 ret
     97+                
     97+4164            restart_timeout:
     97+4164 1E06       	pushw	rr6
     97+4166 C77F       	mov		r7,#7fh
     97+4168 9820F1     	jmp		System_Call
     97+                	
     97+416B            enable_pause:
     97+416B 1E06       	pushw	rr6
     97+416D C782       	mov		r7,#82h
     97+416F 9820F1     	jmp		System_Call	
     97+                	
     97+4172            disable_pause:
     97+4172 1E06       	pushw	rr6
     97+4174 C783       	mov		r7,#83h
     97+4176 9820F1     	jmp		System_Call	
     97+                
     97+4179            FBDrawGraphicF:
     97+4179 0E00       	push	r0
     97+417B B0C0       	mov	r0,fadeStep		; copy the current fade step to r0
     97+417D 507F00     	cmp	r0,#127
     97+4180 D316       	br	ule,FBFadeGraphicC
     97+4182 509F00     	cmp	r0,#159
     97+4185 D30F       	br	ule,FBFadeGraphic2
     97+4187 50BF00     	cmp	r0,#191
     97+418A D308       	br	ule,FBFadeGraphic3
     97+418C 0F00       	pop	r0
     97+                	; fill with black
     97+418E 580308     	mov	r8,#3
     97+4191 9840B8     	jmp	FBFillColor		; fill the screen with black		
     97+                
     97+4194            FBFadeGraphic3:
     97+4194 080E       	inc	r14
     97+4196            FBFadeGraphic2:	
     97+4196 080E       	inc	r14
     97+                	
     97+4198            FBFadeGraphicC:
     97+4198 0F00       	pop	r0
     97+419A 1E06               pushw   rr6
     97+419C C71D               mov     r7,#1dh
     97+419E 9820F1             jmp	System_Call
     97+                
     97+41A1             	end



System C SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    7


     98                 ; ---------------------------------------------------------------------------
     99                 		include	source/FUNCS.ASM
     99+                ; ===========================================================================	
     99+                		title   Various functions
     99+                		type	8521
     99+                		program
     99+                ; ===========================================================================	
     99+                
     99+                ; ===========================================================================
     99+                ; Subroutine to wait a given amount of seconds
     99+                ; ===========================================================================	
     99+41A1            Wait10Seconds:
     99+41A1 C102       		mov	r1,#2
     99+                
     99+41A3            waitloop:
     99+41A3 C0FF       		mov	r0,#255
     99+41A5            onesecond:
     99+41A5 4941BA     		call	WaitForVInt
     99+41A8 0900       		dec	r0
     99+41AA 500000     		cmp	r0,#0
     99+41AD DEF6       		br	nz,onesecond
     99+                
     99+41AF 0901       		dec	r1
     99+41B1 500001     		cmp	r1,#0
     99+41B4 DEED       		br	nz,waitloop
     99+                
     99+41B6 F8         		ret
     99+                
     99+                ; ===========================================================================
     99+                ; Subroutine to read the player's input
     99+                ; ===========================================================================	
     99+41B7            ReadInput:
     99+                ;		call	SCAN_KEY		; use the system call to read the current inputs
     99+41B7 B8BF       		mov	playerInput,r0		; store the input to RAM
     99+41B9 F8         		ret
     99+                ; ===========================================================================
     99+                ; Subroutine to wait for a vertical interrupt
     99+                ; ===========================================================================	
     99+41BA            WaitForVInt:
     99+41BA 1E02       		pushw	rr2					; store rr2 onto the stack
     99+41BC 0E00       		push	r0					; store r0 onto the stack
     99+41BE 0E01       		push	r1					; store r1 onto the stack
     99+                
     99+41C0 7A0112     		movw	rr2,#0112h			; load the DMG_timer into rr2
     99+41C3 B1BE       		mov	r1, prevVtick			; load the previous V-Int tick into r1
     99+                		
     99+41C5            WaitForVInt_Wait:
     99+41C5 38820000   		mov	r0,	0(rr2)				; load the value of the timer into r0
     99+41C9 1001       		cmp	r0,	r1					; is the timer on the same tick as before?
     99+41CB D6F8       		br	eq,	WaitForVInt_Wait	; if so, loop and wait
     99+                		
     99+41CD B8BE       		mov	prevVtick,r0			; store the new V-Int tick
     99+                
     99+41CF 0F01       		pop	r1						; restore r1 from the stack		
     99+41D1 0F00       		pop	r0						; restore r0 from the stack



Various  SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    8


     99+41D3 1F02       		popw	rr2					; restore rr2 from the stack
     99+41D5 F8         		ret							; return
     99+                ; ===========================================================================	
     99+     00FB       StrCharY        equ     251
     99+     0021       StrCharBank     equ     21h
     99+     0005       StrCharWid      equ     5
     99+                
     99+41D6            FBDrawChar:
     99+41D6 58050A     		mov		r10,#5			; for testing, draw the number '1'
     99+41D9 58FB0B     		mov		r11,#StrCharY
     99+41DC 58050C     		mov		r12,#StrCharWid
     99+41DF 58050D     		mov		r13,#StrCharWid
     99+41E2 58210E     		mov		r14,#StrCharBank
     99+41E5 58000F     		mov		r15,#0
     99+41E8 4940C6     		call	FBDrawGraphic		
     99+                		
     99+41EB F8         		ret
     99+                ; ===========================================================================	
     99+41EC             		end
    100                 ; ---------------------------------------------------------------------------
    101                 		include	source/SFGHQ.ASM
    101+                		title   Sonic Fan Games HQ Splash Screen
    101+                		type	8521
    101+                		program
    101+                ;============================================================================		
    101+     0021       SFGHQ_Bank  equ     021h
    101+                
    101+41EC            SFGHQ_Update:		
    101+41EC 4941A1     		call	Wait10Seconds
    101+41EF 5801C2     		mov 	nextGState, #1
    101+41F2 494076     		call 	Game_ChangeState
    101+41F5 F8         		ret
    101+41F6            SFGHQ_Draw:
    101+41F6 580008     		mov		r8,#0
    101+41F9 580009     		mov		r9,#0
    101+41FC 58000A     		mov		r10,#0
    101+41FF 58000B     		mov		r11,#0
    101+4202 58C80C     		mov		r12,#200		; Horizontal size
    101+4205 58A00D     		mov		r13,#160		; Vertical size
    101+4208 58210E     		mov		r14,#SFGHQ_Bank	; Bank #
    101+420B 58000F     		mov		r15,#0			; Write mode
    101+420E 494179     		call 	FBDrawGraphicF
    101+4211 F8         		ret
    101+                ;============================================================================
    101+4212             		end
    102                 ; ---------------------------------------------------------------------------
    103                 		include	source/TETR_G.ASM
    103+                		title   Tetris Gameboard
    103+                		type	8521
    103+                		program
    103+                ;============================================================================	
    103+                
    103+     0024       Tetris_Bank1  equ     024h
    103+     0021       Tetris_Bank2  equ     021h
    103+                



Tetris G SM8521 Assembler V1.10            Thu Mar 01 16:12:11 2018  Page    9


    103+4212            Tetris_DrawField:
    103+4212 587B08     		mov		r8,#123
    103+4215 580009     		mov		r9,#0
    103+4218 58000A     		mov		r10,#0
    103+421B 58000B     		mov		r11,#0
    103+421E 584D0C     		mov		r12,#77			    ; Horizontal size
    103+4221 58A00D     		mov		r13,#160		    ; Vertical size
    103+4224 58240E     		mov		r14,#Tetris_Bank1	; Bank #
    103+4227 58000F     		mov		r15,#0			    ; Write mode
    103+422A 494179     		call	FBDrawGraphicF
    103+                		
    103+422D 580008     		mov		r8,#0
    103+4230 580009     		mov		r9,#0
    103+4233 58C80A     		mov		r10,#200
    103+4236 58000B     		mov		r11,#0
    103+4239 582B0C     		mov		r12,#43				; Horizontal size
    103+423C 58A00D     		mov		r13,#160			; Vertical size
    103+423F 58210E     		mov		r14,#Tetris_Bank2	; Bank #
    103+4242 58000F     		mov		r15,#0				; Write mode
    103+4245 494179     		call	FBDrawGraphicF
    103+4248 F8         		ret
    103+4249            Tetris_Update:
    103+                
    103+4249 984249     		jmp Tetris_Update
    103+424C            Tetris_Draw:
    103+424C 4940B8     		call	FBFillColor
    103+424F 494212     		call 	Tetris_DrawField
    103+4252 4941D6     		call	FBDrawChar
    103+4255 F8         		ret
    103+                ;============================================================================
    103+4256             		end
    104                 ; ---------------------------------------------------------------------------
    105 4256             	end
